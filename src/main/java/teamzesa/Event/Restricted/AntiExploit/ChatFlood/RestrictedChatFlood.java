package teamzesa.Event.Restricted.AntiExploit.ChatFlood;

import io.papermc.paper.event.player.AsyncChatEvent;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.TextComponent;
import org.bukkit.entity.Player;
import org.bukkit.event.player.PlayerKickEvent;
import teamzesa.Event.EventRegister;
import teamzesa.Enumeration.Type.ColorType;
import teamzesa.Util.Function.StringComponentExchanger;

public class RestrictedChatFlood extends StringComponentExchanger implements EventRegister {
    private Player player;
    private TextComponent currentChat;
    private ChatTotalStatus chatTotalStatus;

    private final AsyncChatEvent event;

    public RestrictedChatFlood(AsyncChatEvent event) {
        this.event = event;
        init();
        execute();
    }

    @Override
    public void init() {
        this.player = this.event.getPlayer();
        this.currentChat = (TextComponent) this.event.message();
        this.chatTotalStatus = ChatTotalStatus.getChatTotalStatus();
    }

    @Override
    public void execute() {
        if (this.chatTotalStatus.isExistURL(this.currentChat.content())) {
            Component comment = componentExchanger("주소를 포함한 채팅은 작성할 수 없습니다.", ColorType.RED);
            this.player.kick(comment, PlayerKickEvent.Cause.SPAM);
            this.event.setCancelled(true);
            return;
        }

        if (this.chatTotalStatus.isExistComment(new ChatMessage(this.player, this.currentChat.content()))) {
            Component comment = componentExchanger("같은 채팅을 두번 칠 수 없습니다.", ColorType.RED);
            this.player.kick(comment, PlayerKickEvent.Cause.SPAM);
            this.event.setCancelled(true);
            return;
        }

        this.chatTotalStatus.clear();
        this.chatTotalStatus.addChat(new ChatMessage(this.player, this.currentChat.content()));
    }
}
